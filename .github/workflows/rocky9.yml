---
name: rocky9-epics

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

jobs:

  rocky9-epics:
    runs-on: ubuntu-latest
    container: jeonghanlee/rocky9-epics:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build on rocky9-epics Docker
        run: |
          source /usr/local/setEnv
          cd $GITHUB_WORKSPACE
          echo "ASYN:=${EPICS_MODULES}/asyn"              > configure/RELEASE.local'
          echo "AUTOSAVE:=${EPICS_MODULES}/autosave"     >> configure/RELEASE.local'
          echo "BUSY:=${EPICS_MODULES}/busy"             >> configure/RELEASE.local'
          echo "CALC:=${EPICS_MODULES}/calc"             >> configure/RELEASE.local'
          echo "CAPUTLOG:=${EPICS_MODULES}/caPutLog"     >> configure/RELEASE.local'
          echo "ETHERIP:=${EPICS_MODULES}/ether_ip"      >> configure/RELEASE.local'
          echo "ETHER_IP:=${EPICS_MODULES}/ether_ip"     >> configure/RELEASE.local'
          echo "IOCSTATS:=${EPICS_MODULES}/iocStats"     >> configure/RELEASE.local'
          echo "devIocStats:=${EPICS_MODULES}/iocStats"  >> configure/RELEASE.local'
          echo "LUA:=${EPICS_MODULES}/lua"               >> configure/RELEASE.local'
          echo "MCA:=${EPICS_MODULES}/mca"               >> configure/RELEASE.local'
          echo "MCOREUTILS:=${EPICS_MODULES}/MCoreUtils" >> configure/RELEASE.local'
          echo "MEASCOMP:=${EPICS_MODULES}/measComp"     >> configure/RELEASE.local'
          echo "MODBUS:=${EPICS_MODULES}/modbus"         >> configure/RELEASE.local'
          echo "PYDEVSUP:=${EPICS_MODULES}/pyDevSup"     >> configure/RELEASE.local'
          echo "RECSYNC:=${EPICS_MODULES}/recsync"       >> configure/RELEASE.local'
          echo "RECCASTER:=${EPICS_MODULES}/recsync"     >> configure/RELEASE.local'
          echo "RETOOLS:=${EPICS_MODULES}/retools"       >> configure/RELEASE.local'
          echo "SCALER:=${EPICS_MODULES}/scaler"         >> configure/RELEASE.local'
          echo "SNCSEQ:=${EPICS_MODULES}/seq"            >> configure/RELEASE.local'
          echo "SNMP:=${EPICS_MODULES}/snmp"             >> configure/RELEASE.local'
          echo "SSCAN:=${EPICS_MODULES}/sscan"           >> configure/RELEASE.local'
          echo "STREAM:=${EPICS_MODULES}/StreamDevice"   >> configure/RELEASE.local'
          echo "EPICS_BASE:=${EPICS_BASE}"               >> configure/RELEASE.local'
          echo "CHECK_RELEASE = NO"                   > configure/CONFIG_SITE.local'
          export LC_CTYPE=C.UTF-8
          export LC_ALL=C.UTF-8
          make

